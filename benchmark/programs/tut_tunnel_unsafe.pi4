header_type ether_t {
    dst: 48;
    src: 48;
    type: 16;
}
header_type ipv4_t {
    version: 4;
    ihl: 4;
    tos: 8;
    len: 16;
    id: 16;
    flags: 3;
    frag: 13;
    ttl: 8;
    proto: 8;
    chksum: 16;
    src: 32;
    dst: 32;
}
header_type standard_metadata_t {
    ingress_port: 9;
    egress_spec: 9;
    egress_port: 9;
    instance_type: 32;
    packet_length: 32;
    enq_timestamp: 32;
    enq_qdepth: 19;
    deq_timedelta: 32;
    deq_qdepth: 19;
    ingress_global_timestamp: 48;
    mcast_grp: 16;
    egress_rid: 16;
    checksum_error: 1;
    priority: 3;
    drop: 1;
}
header_type forward_table_t {
    ipv4_dst_key: 32;
    act_ipv4_forward: 1;
    dst: 48;
    port: 9;
}
header_type tunnel_table_t {
    dest_id_key: 16;
    act: 1;
    port: 9;
}
header_type my_tunnel_t{
    proto_id: 16;
    dst_id: 16;
}

header ether : ether_t
header ipv4 : ipv4_t
header stdmeta : standard_metadata_t
header forward_table : forward_table_t
header tunnel_table : tunnel_table_t
header my_tnl : my_tunnel_t

extract(ether);
if(ether.type == 0x1222) {
    extract(my_tnl);
    if(my_tnl.proto_id == 0x0800){
        extract(ipv4)
    }
};

if(ipv4.valid) {
    if(!my_tnl.valid){
        if(ipv4.dst == forward_table.ipv4_dst_key) {
          if(forward_table.act_ipv4_forward == 0b1) {
            stdmeta.egress_spec := forward_table.port;
            ether.src := ether.dst;
            ether.dst := forward_table.dst;
            ipv4.ttl := ipv4.ttl - 0x01
          } else {
            stdmeta.drop := 0b1;
            stdmeta.mcast_grp := 0x0000
          }
        } else {
          stdmeta.drop := 0b1;
          stdmeta.mcast_grp := 0x0000
        }
    } else {
        stdmeta.drop := 0b1;
        stdmeta.mcast_grp := 0x0000
    }
};

if(my_tnl.valid){
    if(my_tnl.dst_id == tunnel_table.dest_id_key){
      if(tunnel_table.act == 0b1){
        stdmeta.egress_spec := tunnel_table.port
      } else {
        stdmeta.drop := 0b1;
        stdmeta.mcast_grp := 0x0000
      }
    }
};

if(stdmeta.drop != 0b1) {
  if(ether.valid){
    remit(ether)
  };
  if(my_tnl.valid){
    remit(my_tnl)
  };
  if(ipv4.valid){
    remit(ipv4)
  }
}
